# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile
# Use a Python image with uv pre-installed
FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv

# Set the working directory
WORKDIR /app

# Copy the necessary files for the build
COPY pyproject.toml uv.lock ./

# Install the project's dependencies using the lockfile and settings
RUN --mount=type=cache,target=/root/.cache/uv     --mount=type=bind,source=uv.lock,target=uv.lock     --mount=type=bind,source=pyproject.toml,target=pyproject.toml     uv sync --frozen --no-install-project --no-dev --no-editable

# Then, add the rest of the project source code and install it
ADD . /app
RUN --mount=type=cache,target=/root/.cache/uv     uv sync --frozen --no-dev --no-editable

FROM python:3.12-slim-bookworm

# Set the working directory
WORKDIR /app

# Copy the virtual environment from the uv stage
COPY --from=uv /root/.local /root/.local
COPY --from=uv --chown=app:app /app/.venv /app/.venv

# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:$PATH"

# Set environment variables for Spotify API
ENV SPOTIFY_CLIENT_ID="YOUR_CLIENT_ID"
ENV SPOTIFY_CLIENT_SECRET="YOUR_CLIENT_SECRET"
ENV SPOTIFY_REDIRECT_URI="http://localhost:8888"

# when running the container, add --db-path and a bind mount to the host's db file
ENTRYPOINT ["uv", "run", "spotify-mcp"]
